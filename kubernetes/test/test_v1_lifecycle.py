# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: master
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from client.models.v1_lifecycle import V1Lifecycle

class TestV1Lifecycle(unittest.TestCase):
    """V1Lifecycle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1Lifecycle:
        """Test V1Lifecycle
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1Lifecycle`
        """
        model = V1Lifecycle()
        if include_optional:
            return V1Lifecycle(
                post_start = client.models.v1/lifecycle_handler.v1.LifecycleHandler(
                    exec = client.models.v1/exec_action.v1.ExecAction(
                        command = [
                            ''
                            ], ), 
                    http_get = client.models.v1/http_get_action.v1.HTTPGetAction(
                        host = '', 
                        http_headers = [
                            client.models.v1/http_header.v1.HTTPHeader(
                                name = '', 
                                value = '', )
                            ], 
                        path = '', 
                        port = client.models.port.port(), 
                        scheme = '', ), 
                    sleep = client.models.v1/sleep_action.v1.SleepAction(
                        seconds = 56, ), 
                    tcp_socket = client.models.v1/tcp_socket_action.v1.TCPSocketAction(
                        host = '', 
                        port = client.models.port.port(), ), ),
                pre_stop = client.models.v1/lifecycle_handler.v1.LifecycleHandler(
                    exec = client.models.v1/exec_action.v1.ExecAction(
                        command = [
                            ''
                            ], ), 
                    http_get = client.models.v1/http_get_action.v1.HTTPGetAction(
                        host = '', 
                        http_headers = [
                            client.models.v1/http_header.v1.HTTPHeader(
                                name = '', 
                                value = '', )
                            ], 
                        path = '', 
                        port = client.models.port.port(), 
                        scheme = '', ), 
                    sleep = client.models.v1/sleep_action.v1.SleepAction(
                        seconds = 56, ), 
                    tcp_socket = client.models.v1/tcp_socket_action.v1.TCPSocketAction(
                        host = '', 
                        port = client.models.port.port(), ), )
            )
        else:
            return V1Lifecycle(
        )
        """

    def testV1Lifecycle(self):
        """Test V1Lifecycle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
